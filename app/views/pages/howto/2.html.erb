<%#PROVIDE TITLE%>
<%provide(:title, "Test: Puzzle 2") %>
<xml id="toolbox" style="display: none">

<category name="Category 1">
  <block type="controls_repeat_ext">
    <value name="TIMES">
    <shadow type="math_number">
      <field name="NUM">10</field>
    </shadow>
    </value>
  </block>
  <block type="block_8"></block>
  <block type="math_arithmetic"></block>
  <block type="block_6"></block>
  <block type="get_input"></block>
  <block type="variables_set">
    <field name="VAR">x</field>
  </block>
  </category>
<category name="Variables" colour="#A65C81" custom="VARIABLE"></category>
</xml>

<div id="puzzle-description">
<span> Can you calculate the factorial of each input? (for example, the factorial of 4 is 4*3*3*1 = 24)</span>
</div>

<div id="inputDiv">
<h2 id="inputs">Inputs:</h2>
</div>

<div id="blocklyArea">
  <div id="blocklyDiv" style="position: absolute"></div>
</div>

<div id="outputDiv">
  <button onclick="runCode()">Run Code!</button>
  <table id="output-table">
   <tr>
     <th>Input</th>
     <th>Output</th>
     <th id="correct-th">Correct?</th>
    </tr>
  </table>
</div>

<div id="winscreenDiv">
  <div id="winscreenHeaderContainer">
    <h1 id="winscreenHeader">Puzzle Solved!<h1>
  </div>
  <div id="winscreenStayContainer">
    <div id="winscreenStay">Stay on this puzzle</div>
  </div>
  <div id="winscreenNextContainer">
    <div id="winscreenNext">Next Puzzle</div>
  </div>
</div>




<script>
var blocklyArea = document.getElementById('blocklyArea');
var blocklyDiv = document.getElementById('blocklyDiv');
var workspace = Blockly.inject(blocklyDiv,
  {toolbox: document.getElementById('toolbox'), scrollbars: false});
var onresize = function(e) {
// Compute the absolute coordinates and dimensions of blocklyArea.
var element = blocklyArea;
var x = 0;
var y = 0;
do {
  x += element.offsetLeft;
  y += element.offsetTop;
  element = element.offsetParent;
} while (element);
  // Position blocklyDiv over blocklyArea.
  blocklyDiv.style.left = x + 'px';
  blocklyDiv.style.top = y + 'px';
  blocklyDiv.style.width = blocklyArea.offsetWidth + 'px';
  blocklyDiv.style.height = blocklyArea.offsetHeight + 'px';
};
window.addEventListener('resize', onresize, false);
onresize();
Blockly.svgResize(workspace);

var INPUT = {
  input: 0, //init a current input
  input_array: [4, 8] //list of test cases
 };
var CORRECT_OUTPUT = {
  output_array: [24, 40320], //what test case should output as
};
var OUTPUT = {
  output_array: [] //init an array to store code output runs
};
//set starting, non-deletable, block here.
var defaultXml =
      '<xml>' +
      '  <block type="output" deletable="false" x="350" y="35">' +
      '  </block>' +
     /* '  <block type="get_input" deletable="false" x="35" y="80">' +
      '  </block>' +*/
      '</xml>';
var xml = Blockly.Xml.textToDom(defaultXml);
Blockly.Xml.domToWorkspace(xml, workspace);

buildTable();
displayInputs(); //fill the input element with inputs
</script>